{"version":3,"sources":["components/Home.js","components/ChooseSubject.js","components/ScorePanel.js","components/QuizPage.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Fragment","className","to","ChooseSubject","ScorePanel","props","value","Score","maxValue","length","fadedOpacity","lineGap","lineWidth","style","QuizPage","useState","questionNo","setquestionNo","Questions","setQuestions","setScore","finalScore","setFinalScore","handleClick","event","userans","correctans","target","backgroundColor","oldScore","buttons","parentNode","getElementsByTagName","i","disabled","useEffect","url","subject","fetch","then","res","json","data","toUpperCase","marginTop","isPlaying","duration","size","colors","remainingTime","question","onClick","option1","option2","option3","option4","old","document","getElementsByClassName","NextQuestion","type","color","height","width","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ea938c0d.chunk.js","sourcesContent":["import React ,{useState}from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/Home.css';\r\nexport default function Home(){\r\n    return (\r\n        <React.Fragment>\r\n         <h1 className=\"Home\">Welcome to Gajju Malviya's Quiz Show</h1>\r\n            <Link to=\"/ChooseSubject/\"> <button className=\"startbtn\">Start Quiz</button> </Link>\r\n        </React.Fragment>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { Link ,Switch,Route,useParams,useRouteMatch} from 'react-router-dom'\r\nimport '../css/ChooseSubject.css'\r\nconst ChooseSubject= ()=>{\r\n\r\n   return  (<React.Fragment>\r\n                <h1 className=\"Welcome-Text\">Select a Subject for Quiz</h1>\r\n                <div className=\"ContainerSubjects\">\r\n                    <Link to=\"/QuizPage/HTML\"><button className=\"startbtn\">HTML</button></Link>\r\n                    <Link to=\"/QuizPage/CSS\"><button className=\"startbtn\">CSS</button></Link>\r\n                    <Link to=\"/QuizPage/JavaScript\"><button className=\"startbtn\">JavaScript</button></Link>\r\n                    <Link to=\"/QuizPage/NodeJS\"><button className=\"startbtn\">NodeJS</button></Link>\r\n                    <Link to=\"/QuizPage/ReactJS\"><button className=\"startbtn\">ReactJS</button></Link>\r\n                    <Link to=\"/QuizPage/Java\"><button className=\"startbtn\">Java</button></Link>\r\n                </div>\r\n            </React.Fragment>)\r\n}\r\nexport default ChooseSubject;","import React  from \"react\";\r\nimport ReactStoreIndicator from 'react-score-indicator'\r\nfunction ScorePanel(props){\r\n    return (  \r\n     <React.Fragment>   \r\n        <ReactStoreIndicator\r\n            value={props.Score}\r\n            maxValue={props.length*5}\r\n            fadedOpacity={20}\r\n            lineGap={0}\r\n            lineWidth={10}\t\r\n            style={{\"margin-top\":'30px'}}\r\n        />\r\n        <h1>{props.Score>(props.length*5)/2?\"Excellent\":props.Score>(props.length*5)/3?\"Good\":\"Need To Improve\"}</h1>\r\n    </React.Fragment>\r\n    );\r\n}\r\nexport default ScorePanel\r\n","import React ,{useState,useEffect} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport ReactLoading from 'react-loading';\r\nimport '../css/QuizPage.css';\r\n// import Questions from '../components/Questions';\r\nimport ScorePanel from './ScorePanel';\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nconst QuizPage=(props)=>{\r\n    const [questionNo, setquestionNo] = useState(0);\r\n    const [Questions,setQuestions]=useState(null);\r\n    const [Score, setScore] = useState(0);\r\n    const [finalScore,setFinalScore]=useState(false);\r\n    function NextQuestion(){\r\n        if(questionNo>=Questions.length-1){\r\n            setFinalScore(()=>true);\r\n        }\r\n        else{\r\n            setquestionNo((old)=>old+1);\r\n            var buttons=document.getElementsByClassName(\"OptionList\")[0].getElementsByTagName('button');\r\n            for (let i = 0; i < buttons.length; i++) {\r\n                buttons[i].style.backgroundColor=\"rgba(255, 255, 255,0.1)\";\r\n                buttons[i].disabled=false;\r\n            }\r\n        }\r\n    }\r\n    function handleClick(event,userans){\r\n        if(userans===Questions[questionNo].correctans){\r\n            event.target.style.backgroundColor=\"green\";\r\n            setScore((oldScore)=>oldScore+5);\r\n            var buttons=event.target.parentNode.getElementsByTagName(\"Button\");\r\n            for (let i = 0; i < buttons.length; i++) {\r\n                if(i+1!==Questions[questionNo].correctans){\r\n                    buttons[i].style.backgroundColor=\"rgba(0, 0, 0,0.8)\";\r\n                }\r\n                buttons[i].disabled=true;\r\n            }\r\n        }\r\n        else {\r\n            event.target.style.backgroundColor=\"red\";  \r\n            var buttons=event.target.parentNode.getElementsByTagName(\"Button\");\r\n            for (let i = 0; i < buttons.length; i++) {\r\n                if(i+1===Questions[questionNo].correctans){\r\n                    buttons[i].style.backgroundColor=\"green\";\r\n                }\r\n                else{\r\n                    if(buttons[i].style.backgroundColor!==\"red\")\r\n                     buttons[i].style.backgroundColor=\"rgba(0, 0, 0,0.8)\";\r\n                }\r\n                buttons[i].disabled=true;\r\n            }\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        let url=\"/Questions/\"+ props.subject;\r\n        fetch(url).then(res=>res.json()).then(data=>{\r\n                setQuestions(data);\r\n        })}  \r\n        \r\n    ,[]);\r\n    return( \r\n        <React.Fragment>\r\n            <h1 className=\"Welcome-Text\">Welcome to {props.subject.toUpperCase()} Quiz</h1>\r\n            <div className=\"Container\">\r\n                {finalScore ? (\r\n                <React.Fragment>\r\n                   <ScorePanel Score={Score} length={Questions.length}/>\r\n                </React.Fragment>\r\n                 ):(\r\n                <React.Fragment>    \r\n                <div className=\"QuestionInfo\">\r\n                   <div>\r\n                       <h2>Question No. {Questions?questionNo+1:0}</h2>\r\n                   </div>\r\n                   <div style={{marginTop:'10px'}}>\r\n                        <CountdownCircleTimer\r\n                            isPlaying={Questions?true:false}\r\n                            duration={50}\r\n                            size={100}\r\n                            colors={[\r\n                            ['#004777', 0.33],\r\n                            ['#F7B801', 0.33],\r\n                            ['#A30000', 0.33],\r\n                            ]}\r\n                            >\r\n                            {({remainingTime})=>{\r\n                                if(remainingTime==0){\r\n                                    setFinalScore(()=>true);\r\n                                }\r\n                                return (<div>\r\n                                            <h1>{remainingTime}</h1>\r\n                                        </div>)\r\n                            }}\r\n                        </CountdownCircleTimer>\r\n                   </div>\r\n                   <div>\r\n                       <h2>Total Question {Questions?Questions.length:0}</h2>\r\n                   </div>\r\n               </div>\r\n               {Questions?(\r\n               <React.Fragment>\r\n               <div className=\"Question-Container\">\r\n                    <h2>{Questions[questionNo].question}</h2> \r\n               </div>\r\n               <div className=\"OptionList\">\r\n                    <div>\r\n                        <button onClick={(event)=>handleClick(event,1)}> {Questions[questionNo].option1}</button>\r\n                        <button onClick={(event)=>handleClick(event,2)}> {Questions[questionNo].option2}</button>\r\n                        <button onClick={(event)=>handleClick(event,3)}> {Questions[questionNo].option3}</button>\r\n                        <button onClick={(event)=>handleClick(event,4)}> {Questions[questionNo].option4}</button>\r\n                    </div>\r\n               </div>\r\n               <div className=\"NextQuestionDiv\">\r\n                     <div></div>\r\n                    <button onClick={(event)=>NextQuestion(event)}> Next</button>\r\n               </div>\r\n               </React.Fragment>\r\n               ):(\r\n               <div className=\"Loader\">\r\n                   <ReactLoading type={'bubbles'} color={'#000'} height={250} width={250} />\r\n                   <h1>Work In Progress</h1>\r\n                </div>\r\n                )}\r\n               </React.Fragment>\r\n               )}\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\nexport default QuizPage;","import './App.css';\nimport Home from'./components/Home';\nimport ChooseSubject from './components/ChooseSubject';\nimport QuizPage from './components/QuizPage'\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n          <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/ChooseSubject\" component={ChooseSubject} />\n              <Route exact path=\"/QuizPage/JavaScript\" >\n                <QuizPage subject=\"JavaScript\"/>\n              </Route> \n              <Route exact path=\"/QuizPage/Java\" >\n                <QuizPage subject=\"Java\"/>\n              </Route>\n              <Route exact path=\"/QuizPage/NodeJS\" >\n                <QuizPage subject=\"NodeJS\"/>\n              </Route> \n              <Route exact path=\"/QuizPage/HTML\" >\n                <QuizPage subject=\"HTML\"/> \n              </Route> \n              <Route exact path=\"/QuizPage/CSS\" >\n                <QuizPage subject=\"CSS\"/>\n              </Route> \n              <Route exact path=\"/QuizPage/ReactJS\" >\n                <QuizPage subject=\"ReactJS\"/>\n              </Route> \n          </Switch>\n      </Router>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}